<?xml version="1.0"?>
<launch>
  <arg name="hardware_interface" default="PositionJointInterface"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="rviz" default = "true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="extra_gazebo_args" default="--verbose"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find iwtros_gazebo)/worlds/iwtros2.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  <!-- Load URDF into ROS parameter server -->
  <include file="$(find robots_ee_pkg)/launch/load_iwt_environment.launch"/>
  
  <!-- Start move_group -->
  <!--include file="$(find iwtros_panda_moveit_config)/launch/move_group.launch"/>
  <include file="$(find iwtros_iiwa_moveit_config)/launch/move_group.launch"/>
  <include file="$(find iwtros_ur5_moveit_config)/launch/move_group.launch"/-->
  <include file="$(find iwtros_moveit_config)/launch/move_group.launch"/>

  <!-- Spawn the URDF objects into Gazebo -->
  <include file="$(find iwtros_gazebo)/launch/spawn_static_world_object.launch"/>
  <include file="$(find iwtros_gazebo)/launch/spawn_robots.launch"/>
  <include file="$(find iwtros_gazebo)/launch/spawn_omronld.launch"/>
  <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch" />
    
  <param name="use_gui" value="false"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">[/ur5/joint_states, /iiwa/joint_states, /panda/joint_states]</rosparam>
    <remap from="/joint_states" to="/combined_joint_states"/>
  </node>

  <!-- Start the AMCL-->
  <arg name="map_file" default="$(find iwtros_gazebo)/map/test5.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <include file="$(find omronld_gazebo)/launch/amcl.launch" >
    <arg name="initial_pose_x" value="0"/>
    <arg name="initial_pose_y" value="-1.5"/>
  </include>

  <node if="$(arg rviz)" name="gazebo_rviz" pkg="rviz" type="rviz" args="-d $(find iwtros_gazebo)/worlds/amcl.rviz" required="true" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50"/>
    <remap from="/joint_states" to="/combined_joint_states"/>
  </node>

  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0 0 0 0 0 0 1  map world"/>

</launch>
