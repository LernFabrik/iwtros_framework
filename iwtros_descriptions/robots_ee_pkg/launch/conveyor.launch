<?xml version="1.0"?>
<launch>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="hardware_interface" default="PositionJointInterface"/>
  <arg name="robot_name" default="iiwa" />
  <arg name="model" default="iiwa7"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robots_ee_pkg)/urdf/conveyor/conveyor.xacro'" />

  <param name="use_gui" value="true"/>
	<!-- Starting Joint state publisher node which will publish the joint values -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	<!-- Starting robot state publish which will publish tf -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
	<!-- Launch visualization in rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robots_ee_pkg)/basic.rviz" required="true" />

  <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model conveyor -param robot_description"/>

</launch>
