
GlobalPlanner:
  allow_unknown: true           #Specifies whether or not to allow the planner to create plans that traverse unknown space. 
  #default_tolerance : 0.0      #A tolerance on the goal point for the planner.
  visualize_potential: true     #(default: false): Specifies whether or not to visualize the potential area computed via a PointCloud2.
  use_dijkstra: true            #if true, use dijkstra's algorithm. Otherwise, A*.
  use_quadratic: true           #If true, use quadratic approximation of the grid boundaries.Otherwise, use a simpler calculation.
  use_grid_path: false          #f true, create a path that follows the grid boundaries. Otherwise, use a gradient descent method.
  old_navfn_behavior: false     #If for some reason, you want global_planner to exactly mirror the behavior of navfn, set this to true (and use the defaults for the other boolean parameters)
  lethal_cost: 253              #Lethal Cost (dynamic reconfigure)
  neutral_cost: 75              #Neutral cost (dynamic reconfiguration)
  cost_factor: 2.0              #Factor to multiply each cost from costmap by (dynamic reconfiguration)
  publish_potential: true       #Publish Potential Costmap (dynamic reconfigure)
  orientation_mode: 4           #How to set the orientation of each point (None=0, Forward=1, Interpolate=2, ForwardThenInterpolate=3, Backward=4, Leftward=5, Rightward=6) (dynamic reconfigure)
  orientation_window_size: 0    #What window to use to determine the orientation based on the position derivative specified by the orientation mode (dynamic reconfigure)


# This package provides an implementation of a fast, interpolated global planner for navigation. This class adheres to the nav_core::BaseGlobalPlanner interface specified in the nav_core package. It was built as a more flexible replacement to navfn, which in turn is based on NF1.
# http://wiki.ros.org/global_planner?distro=melodic
